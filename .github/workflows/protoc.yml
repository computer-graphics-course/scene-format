name: protobuf build

on: [push]

jobs:
  protoc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          version: '3.x'
      - name: Install ts-proto
        run: npm install ts-proto
      - name: Generate code with protoc
        run: |
          protoc \
            --plugin=./node_modules/.bin/protoc-gen-ts_proto \
            --csharp_out=csharp/SceneFormat/SceneFormat \
            --ts_proto_out=ts \
            --ts_proto_opt=esModuleInterop=true \
            --java_out=java/sceneformat/src/main/java \
            ./proto/scene.proto
      - name: Release generated csharp code as artifact
        uses: actions/upload-artifact@v2
        with:
          name: generated-code-csharp
          path: csharp/SceneFormat/SceneFormat/Scene.cs
      - name: Release generated ts code as artifact
        uses: actions/upload-artifact@v2
        with:
          name: generated-code-ts
          path: ts/proto
      - name: Release generated java code as artifact
        uses: actions/upload-artifact@v2
        with:
          name: generated-code-java
          path: java/sceneformat/src/main/java/com/github/computergraphicscourse/sceneformat/SceneFormat.java
      - name: Build C++ library
        run: curl -X POST -d "" "https://api.nikitavbv.com/v1/scene-format/cpp?branch=${GITHUB_REF##*/}&version=0.1.$GITHUB_RUN_NUMBER"
  build_csharp_library:
    needs: protoc
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Download csharp generated code
        uses: actions/download-artifact@v2
        with:
          name: generated-code-csharp
          path: csharp/SceneFormat/SceneFormat/Scene.cs
      - name: Add GitHub package registry source
        run: dotnet nuget add source https://nuget.pkg.github.com/computer-graphics-course/index.json -n "github" -u "computer-graphics-course" -p "${{ secrets.GITHUB_TOKEN }}" --store-password-in-clear-text
      - name: Restore
        run: cd csharp/SceneFormat && dotnet restore
      - name: Build
        run: cd csharp/SceneFormat && dotnet build --configuration Release /p:Version=0.1.$GITHUB_RUN_NUMBER
      - name: Pack
        run: cd csharp/SceneFormat && dotnet pack --configuration Release /p:Version=0.1.$GITHUB_RUN_NUMBER --no-build --output .
      - name: Install gpr
        run: dotnet tool install gpr -g
      - name: Delete existing package
        run : cd csharp/SceneFormat && gpr delete SceneFormat.0.1.$GITHUB_RUN_NUMBER.nupkg || true
      - name: Push
        run: cd csharp/SceneFormat && gpr push SceneFormat.0.1.$GITHUB_RUN_NUMBER.nupkg --repository computer-graphics-course/scene-format
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build_npm_package:
    needs: protoc
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          registry-url: 'https://npm.pkg.github.com'
      - name: Download ts generated code
        uses: actions/download-artifact@v2
        with:
          name: generated-code-ts
          path: ts/proto
      - name: Install
        run: cd ts && npm install
      - name: Build
        run: cd ts && npm run-script build
      - name: Set version number
        run: |
          cd ts
          jq "{\"version\": \"0.1.$GITHUB_RUN_NUMBER\"} + ." package.json > dist/package.json
      - name: Publish
        run: cd ts/dist && npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build_java_library:
    needs: protoc
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Download java generated code
        uses: actions/download-artifact@v2
        with:
          name: generated-code-java
          path: java/sceneformat/src/main/java/com/github/computergraphicscourse/sceneformat/SceneFormat.java
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '14'
      - name: Publish Library
        run: PUBLICATION_VERSION=0.1.$GITHUB_RUN_NUMBER ./gradlew build publish
        working-directory: java/sceneformat
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
